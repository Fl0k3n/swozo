/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface ServiceModule
 */
export interface ServiceModule {
    /**
     * 
     * @type {number}
     * @memberof ServiceModule
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ServiceModule
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceModule
     */
    instructionUntrustedHtml?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceModule
     */
    subject?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceModule
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof ServiceModule
     */
    createdAt?: Date;
    /**
     * 
     * @type {User}
     * @memberof ServiceModule
     */
    creator?: User;
    /**
     * 
     * @type {string}
     * @memberof ServiceModule
     */
    scheduleTypeName?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceModule
     */
    scheduleTypeVersion?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ServiceModule
     */
    dynamicProperties?: { [key: string]: string; };
    /**
     * 
     * @type {boolean}
     * @memberof ServiceModule
     */
    ready?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServiceModule
     */
    _public?: boolean;
}

export function ServiceModuleFromJSON(json: any): ServiceModule {
    return ServiceModuleFromJSONTyped(json, false);
}

export function ServiceModuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceModule {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'instructionUntrustedHtml': !exists(json, 'instructionUntrustedHtml') ? undefined : json['instructionUntrustedHtml'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'creator': !exists(json, 'creator') ? undefined : UserFromJSON(json['creator']),
        'scheduleTypeName': !exists(json, 'scheduleTypeName') ? undefined : json['scheduleTypeName'],
        'scheduleTypeVersion': !exists(json, 'scheduleTypeVersion') ? undefined : json['scheduleTypeVersion'],
        'dynamicProperties': !exists(json, 'dynamicProperties') ? undefined : json['dynamicProperties'],
        'ready': !exists(json, 'ready') ? undefined : json['ready'],
        '_public': !exists(json, 'public') ? undefined : json['public'],
    };
}

export function ServiceModuleToJSON(value?: ServiceModule | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'instructionUntrustedHtml': value.instructionUntrustedHtml,
        'subject': value.subject,
        'description': value.description,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'creator': UserToJSON(value.creator),
        'scheduleTypeName': value.scheduleTypeName,
        'scheduleTypeVersion': value.scheduleTypeVersion,
        'dynamicProperties': value.dynamicProperties,
        'ready': value.ready,
        'public': value._public,
    };
}

