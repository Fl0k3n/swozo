/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserAdminSummaryDto
 */
export interface UserAdminSummaryDto {
    /**
     * 
     * @type {number}
     * @memberof UserAdminSummaryDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof UserAdminSummaryDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UserAdminSummaryDto
     */
    surname: string;
    /**
     * 
     * @type {string}
     * @memberof UserAdminSummaryDto
     */
    email: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserAdminSummaryDto
     */
    roles: Array<UserAdminSummaryDtoRolesEnum>;
    /**
     * 
     * @type {Date}
     * @memberof UserAdminSummaryDto
     */
    createdAt: Date;
}

/**
* @export
* @enum {string}
*/
export enum UserAdminSummaryDtoRolesEnum {
    Student = 'STUDENT',
    Teacher = 'TEACHER',
    TechnicalTeacher = 'TECHNICAL_TEACHER',
    Admin = 'ADMIN'
}

export function UserAdminSummaryDtoFromJSON(json: any): UserAdminSummaryDto {
    return UserAdminSummaryDtoFromJSONTyped(json, false);
}

export function UserAdminSummaryDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserAdminSummaryDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'surname': json['surname'],
        'email': json['email'],
        'roles': json['roles'],
        'createdAt': (new Date(json['createdAt'])),
    };
}

export function UserAdminSummaryDtoToJSON(value?: UserAdminSummaryDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'surname': value.surname,
        'email': value.email,
        'roles': value.roles,
        'createdAt': (value.createdAt.toISOString()),
    };
}

